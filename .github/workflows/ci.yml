name: CI
on:
  - push
  - pull_request
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node 14
        uses: actions/setup-node@v2.1.2
        with:
          node-version: 14
      - name: Get cache path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache node_modules
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn install --dev
      - name: Linter
        run: yarn run lint
      - name: Compile TypeScript
        run: yarn run build
      - name: Build executables
        run: yarn run release
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: binaries
          path: dist/binaries/
  tag-new-version:
    runs-on: ubuntu-latest
    outputs:
      current-version: ${{ steps.detect-and-tag-version.outputs.current-version }}
      tag: ${{ steps.detect-and-tag-version.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - name: Detect and Tag New Version
        id: detect-and-tag-version
        uses: salsify/action-detect-and-tag-new-version@v2
  release:
    needs:
      - build
      - tag-new-version
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' && needs.tag-new-version.outputs.tag }}
    steps:
      - name: Test
        run: echo 'Release!'
